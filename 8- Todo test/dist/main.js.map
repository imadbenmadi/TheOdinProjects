{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://7--todo-app/./src/newProject.js","webpack://7--todo-app/./src/newTask.js","webpack://7--todo-app/./src/ui_controler.js","webpack://7--todo-app/webpack/bootstrap","webpack://7--todo-app/webpack/runtime/define property getters","webpack://7--todo-app/webpack/runtime/hasOwnProperty shorthand","webpack://7--todo-app/webpack/runtime/make namespace object","webpack://7--todo-app/./src/index.js"],"sourcesContent":["import {\r\n  remove_All_Selected,\r\n  show_project_tasks,\r\n  handle_project_click_bg,\r\n} from \"./ui_controler\"; \r\n// import { selected_project_obj , All_projects } from \"./index\";\r\nexport class Project{\r\n    constructor(name) {\r\n        this.projectName = name;\r\n        this.todos = [];        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport function CreatProjectElement(name) {\r\n    let Container = document.querySelector(\".menu_container\");\r\n    let newProject = document.createElement(\"div\")\r\n    newProject.classList.add(\"Project_item\");\r\n    newProject.classList.add(\"flex_center\");\r\n    // newProject.classList.add(\"menu_btn\");\r\n\r\n    let newProject_text = document.createElement(\"div\");\r\n    newProject_text.classList.add(\"Project_item_text\");\r\n    let newProject_menu = document.createElement(\"div\");\r\n    newProject_menu.classList.add(\"Project_item_menu\");\r\n\r\n    let newProject_menu_span = document.createElement(\"span\");\r\n    newProject_menu_span.textContent = \"more_vert\";\r\n    newProject_menu_span.classList.add(\"material-symbols-outlined\");\r\n    newProject_text.textContent = name;\r\n\r\n    newProject_menu.appendChild(newProject_menu_span);\r\n    newProject.appendChild(newProject_text);\r\n    newProject.appendChild(newProject_menu);\r\n\r\n    let add_new_project_btn = document.querySelector(\".add_project \");\r\n    Container.insertBefore(newProject, add_new_project_btn);\r\n\r\n\r\n\r\n    let selected_project_obj = localStorage.getItem(\"selected_project\");\r\n    newProject.addEventListener(\"click\", () => {\r\n        remove_All_Selected();\r\n        handle_project_click_bg(newProject);\r\n        // console.log(selected_project_obj);\r\n        // show_project_tasks(selected_project_obj);\r\n    });\r\n}","export class Task{\r\n    constructor(title,description) {\r\n        this.title = title;\r\n        this.description = description;\r\n        this.preority = \"\"\r\n    }\r\n}\r\nexport function CreateTask(project_obj , newTask) {\r\n    project_obj.todos.push(newTask);\r\n    \r\n}","import { Project, CreatProjectElement } from \"./newProject\";\r\nimport { Task } from \"./newTask\"; \r\n\r\n\r\n\r\n\r\nexport function changeMenuSelected(menu_items , item) {  \r\n    menu_items.forEach((item) => {\r\n      item.classList.remove(\"active_menu_item\");\r\n    });\r\n    item.classList.add(\"active_menu_item\");\r\n    // changeContent()\r\n}\r\nexport function show_NewProject_Form(form) {\r\n  form.style.display = \"block\"\r\n  setTimeout(() => {\r\n    form.style.maxHeight = \"200px\";\r\n    form.style.opacity = \"1\";\r\n  },1)\r\n}\r\nexport function hide_NewProject_Form() {\r\n  let form = document.querySelector(\".menu_container form\");\r\n  form.style.opacity = 0;\r\n  form.style.maxHeight = 0;\r\n  setTimeout(() => {\r\n    form.style.display = \"none\";\r\n  }, 370);\r\n}\r\nexport function remove_All_Selected() {\r\n  let menu_items = document.querySelectorAll(\".menu_btn\");\r\n  menu_items.forEach((element) => {\r\n    element.classList.remove(\"active_menu_item\");\r\n  })\r\n}\r\n\r\nexport function show_Task_input() {\r\n  let taskform = document.querySelector(\".task_form\");\r\n  taskform.style.display = \"flex\";\r\n  setTimeout(() => {\r\n    taskform.style.transform = \"scale(1)\";\r\n  }, 1);\r\n}\r\nexport function hide_Task_input() {\r\n  let taskform = document.querySelector(\".task_form\");\r\n  input_title.value = \"\";\r\n  input_descripton.value = \"\";\r\n  taskform.style.transform = \"scale(0)\";\r\n  setTimeout(() => {\r\n    taskform.style.display = \"none\";\r\n  }, 255);\r\n}\r\nexport function handle_project_click_bg(clicked_project) {\r\n  document.querySelectorAll(\".Project_item\").forEach((project) => {\r\n    project.style.backgroundColor = \"transparent;\";\r\n    project.classList.remove(\"active_menu_item\");\r\n    project.classList.remove(\"selected_project\");\r\n  })\r\n  clicked_project.classList.add(\"active_menu_item\");\r\n  clicked_project.classList.add(\"selected_project\");\r\n}\r\nexport function show_project_tasks(project) {\r\n  document.querySelector(\".Project_tasks\").style.display = \"block\";\r\n  if (project.todos.length === 0) {\r\n    console.log(\"Empty\");\r\n    return;\r\n  }\r\n  project.todos.forEach((item) => {\r\n    console.log(item);\r\n  });\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {\r\n  changeMenuSelected,\r\n  show_NewProject_Form,\r\n  hide_NewProject_Form,\r\n  show_Task_input,\r\n  hide_Task_input,\r\n} from \"./ui_controler\";\r\n\r\n\r\nimport { Project, CreatProjectElement } from \"./newProject\";\r\nimport { Task, CreateTask } from \"./newTask\";\r\n\r\n\r\nexport let selected_project_obj = {};\r\nexport let All_projects = [];\r\nlocalStorage.setItem(\"selected_project\", JSON.stringify(selected_project_obj));\r\nlocalStorage.setItem(\"All_projects\", JSON.stringify(All_projects));\r\n\r\n\r\n\r\nlet menu_items = document.querySelectorAll(\".menu_btn\");\r\nmenu_items.forEach((item) => {\r\n  item.addEventListener(\"click\", () => {\r\n    changeMenuSelected(menu_items , item);\r\n    // changeContent()\r\n  });\r\n});\r\n// let Project_btns = document.querySelectorAll(\".Project_item\");\r\n// console.log(Project_btns);\r\n// Project_btns.forEach((project) => {\r\n//   project.addEventListener(\"click\", () => {\r\n    \r\n//   })\r\n// });\r\n\r\nlet show_newProjectForm_btn = document.querySelector(\".add_project\");\r\nlet newProject_form = document.querySelector(\".menu_form\");\r\nshow_newProjectForm_btn.addEventListener(\"click\", () => {\r\n  show_NewProject_Form(newProject_form);\r\n});\r\n\r\nlet addProjectBtn = document.querySelector(\".addProjectBtn\");\r\naddProjectBtn.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  let projectName_input = document.querySelector(\r\n    \".menu_container form input\"\r\n  ).value;\r\n  \r\n  let new_project = new Project(projectName_input);\r\n  All_projects.push(new_project);\r\n  localStorage.setItem(\"All_projects\", JSON.stringify(All_projects));\r\n  // console.log(All_projects);\r\n  // console.log(localStorage.getItem(\"All_projects\"));\r\n  CreatProjectElement(new_project.projectName);\r\n  projectName_input = \"\";\r\n  hide_NewProject_Form();\r\n\r\n});\r\n\r\n\r\n// function isDuplicated(All_projects, newProject) {\r\n//   All_projects.forEach((element) => {\r\n//     if (element.projectName == newProject) return 1;\r\n//   });\r\n//   return 0;\r\n// }\r\n// function isEmptyInput(element) {\r\n//   if (element == \"\") return 1;\r\n//   else return 0;\r\n// }\r\n\r\n// working with the task form \r\nlet taskform = document.querySelector(\".task_form\")\r\ndocument.querySelector(\".add_new_task \").addEventListener(\"click\", () => {\r\n  show_Task_input();\r\n});\r\nlet taskform_cancel = document.querySelector(\".cancel_task_form\");\r\nlet taskform_add = document.querySelector(\".add_task_form\");\r\n\r\ntaskform_cancel.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  hide_Task_input();\r\n});\r\n\r\n\r\ntaskform_add.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  let input_title = document.querySelector(\".task_form #input_title\").value;\r\n  let input_descripton = document.querySelector(\r\n    \".task_form #input_descripton\"\r\n  ).value;\r\n  let newTask = new Task(input_title, input_descripton);\r\n  // console.log(newTask);\r\n  let selected_project = document.querySelector(\".selected_project\");\r\n  \r\n  All_projects.forEach((project) => {\r\n    if (project.projectName == selected_project.querySelector(\".Project_item_text\").textContent){\r\n      selected_project_obj = project;\r\n      localStorage.removeItem(\"selected_project\");\r\n      localStorage.setItem(\r\n        \"selected_project\",\r\n        JSON.stringify(selected_project_obj)\r\n      );\r\n      console.log(localStorage.getItem(\"selected_project\"));\r\n    }\r\n  })\r\n  \r\n  CreateTask(selected_project_obj, newTask);\r\n  hide_Task_input();\r\n});\r\n    \r\n  // console.log(localStorage.getItem(\"selected_project\"));\r\n  // console.log(localStorage.getItem(\"All_projects\"));\r\n\r\n "],"names":[],"sourceRoot":""}